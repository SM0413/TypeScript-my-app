{"ast":null,"code":"var _jsxFileName = \"/Users/baegseungmin/Desktop/test/typescript-my-app/src/routes/Chart.tsx\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chart(_ref) {\n  _s();\n\n  let {\n    coinId\n  } = _ref;\n  const {\n    isLoading,\n    data\n  } = useQuery([\"ohlcv\", coinId], () => fetchCoinHistory(coinId));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoading ? \"Loading chart....\" : /*#__PURE__*/_jsxDEV(ApexChart, {\n      type: \"line\",\n      series: [{\n        name: \"price\",\n        data: data === null || data === void 0 ? void 0 : data.map(price => parseFloat(price.close))\n      }],\n      options: {\n        theme: {\n          mode: \"dark\"\n        },\n        chart: {\n          height: 300,\n          width: 500,\n          toolbar: {\n            show: false\n          },\n          background: \"transparent\"\n        },\n        stroke: {\n          curve: \"smooth\",\n          width: 4\n        },\n        grid: {\n          show: false\n        },\n        yaxis: {\n          show: false\n        },\n        xaxis: {\n          labels: {\n            show: false\n          }\n        },\n        fill: {\n          type: \"gradient\",\n          gradient: {\n            gradientToColors: [\"blue\"]\n          }\n        },\n        colors: [\"red\"]\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chart, \"3/UYpjJNObciauUid8uIQ//UcYY=\", false, function () {\n  return [useQuery];\n});\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["useQuery","fetchCoinHistory","ApexChart","Chart","coinId","isLoading","data","name","map","price","parseFloat","close","theme","mode","chart","height","width","toolbar","show","background","stroke","curve","grid","yaxis","xaxis","labels","fill","type","gradient","gradientToColors","colors"],"sources":["/Users/baegseungmin/Desktop/test/typescript-my-app/src/routes/Chart.tsx"],"sourcesContent":["import { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\n\ninterface IHistorical {\n  time_open: number;\n  time_close: number;\n  open: string;\n  high: string;\n  low: string;\n  close: string;\n  volume: string;\n  market_cap: number;\n}\n\ninterface ChartProps {\n  coinId: string;\n}\nfunction Chart({ coinId }: ChartProps) {\n  const { isLoading, data } = useQuery<IHistorical[]>([\"ohlcv\", coinId], () =>\n    fetchCoinHistory(coinId)\n  );\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading chart....\"\n      ) : (\n        <ApexChart\n          type=\"line\"\n          series={[\n            {\n              name: \"price\",\n              data: data?.map((price) => parseFloat(price.close)) as number[],\n            },\n          ]}\n          options={{\n            theme: { mode: \"dark\" },\n            chart: {\n              height: 300,\n              width: 500,\n              toolbar: { show: false },\n              background: \"transparent\",\n            },\n            stroke: {\n              curve: \"smooth\",\n              width: 4,\n            },\n            grid: { show: false },\n            yaxis: { show: false },\n            xaxis: { labels: { show: false } },\n            fill: {\n              type: \"gradient\",\n              gradient: { gradientToColors: [\"blue\"] },\n            },\n            colors: [\"red\"],\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Chart;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,aAAzB;AACA,SAASC,gBAAT,QAAiC,QAAjC;AACA,OAAOC,SAAP,MAAsB,kBAAtB;;;AAgBA,SAASC,KAAT,OAAuC;EAAA;;EAAA,IAAxB;IAAEC;EAAF,CAAwB;EACrC,MAAM;IAAEC,SAAF;IAAaC;EAAb,IAAsBN,QAAQ,CAAgB,CAAC,OAAD,EAAUI,MAAV,CAAhB,EAAmC,MACrEH,gBAAgB,CAACG,MAAD,CADkB,CAApC;EAGA,oBACE;IAAA,UACGC,SAAS,GACR,mBADQ,gBAGR,QAAC,SAAD;MACE,IAAI,EAAC,MADP;MAEE,MAAM,EAAE,CACN;QACEE,IAAI,EAAE,OADR;QAEED,IAAI,EAAEA,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEE,GAAN,CAAWC,KAAD,IAAWC,UAAU,CAACD,KAAK,CAACE,KAAP,CAA/B;MAFR,CADM,CAFV;MAQE,OAAO,EAAE;QACPC,KAAK,EAAE;UAAEC,IAAI,EAAE;QAAR,CADA;QAEPC,KAAK,EAAE;UACLC,MAAM,EAAE,GADH;UAELC,KAAK,EAAE,GAFF;UAGLC,OAAO,EAAE;YAAEC,IAAI,EAAE;UAAR,CAHJ;UAILC,UAAU,EAAE;QAJP,CAFA;QAQPC,MAAM,EAAE;UACNC,KAAK,EAAE,QADD;UAENL,KAAK,EAAE;QAFD,CARD;QAYPM,IAAI,EAAE;UAAEJ,IAAI,EAAE;QAAR,CAZC;QAaPK,KAAK,EAAE;UAAEL,IAAI,EAAE;QAAR,CAbA;QAcPM,KAAK,EAAE;UAAEC,MAAM,EAAE;YAAEP,IAAI,EAAE;UAAR;QAAV,CAdA;QAePQ,IAAI,EAAE;UACJC,IAAI,EAAE,UADF;UAEJC,QAAQ,EAAE;YAAEC,gBAAgB,EAAE,CAAC,MAAD;UAApB;QAFN,CAfC;QAmBPC,MAAM,EAAE,CAAC,KAAD;MAnBD;IARX;MAAA;MAAA;MAAA;IAAA;EAJJ;IAAA;IAAA;IAAA;EAAA,QADF;AAsCD;;GA1CQ3B,K;UACqBH,Q;;;KADrBG,K;AA4CT,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}