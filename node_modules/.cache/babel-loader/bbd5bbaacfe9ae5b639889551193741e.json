{"ast":null,"code":"var _jsxFileName = \"/Users/baegseungmin/Desktop/test/typescript-my-app/src/routes/Chart.tsx\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\nimport { useRecoilValue } from \"recoil\";\nimport { isDarkAtom } from \"../atoms\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chart(_ref) {\n  _s();\n\n  let {\n    coinId\n  } = _ref;\n  const isDark = useRecoilValue(isDarkAtom);\n  const {\n    isLoading,\n    data\n  } = useQuery([\"ohlcv\", coinId], () => fetchCoinHistory(coinId));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoading ? \"Loading chart....\" : /*#__PURE__*/_jsxDEV(ApexChart, {\n      type: \"line\",\n      series: [{\n        name: \"price\",\n        data: data === null || data === void 0 ? void 0 : data.map(price => parseFloat(price.close))\n      }],\n      options: {\n        theme: {\n          mode: isDark ? \"dark\" : \"light\"\n        },\n        chart: {\n          height: 300,\n          width: 500,\n          toolbar: {\n            show: false\n          },\n          background: \"transparent\"\n        },\n        stroke: {\n          curve: \"smooth\",\n          width: 4\n        },\n        grid: {\n          show: false\n        },\n        yaxis: {\n          show: false\n        },\n        xaxis: {\n          labels: {\n            show: false,\n            datetimeFormatter: {\n              month: \"mmmm 'yy'\"\n            }\n          },\n          axisBorder: {\n            show: false\n          },\n          axisTicks: {\n            show: false\n          },\n          type: \"datetime\",\n          categories: data === null || data === void 0 ? void 0 : data.map(price => price.time_close)\n        },\n        fill: {\n          type: \"gradient\",\n          gradient: {\n            gradientToColors: [\"#40739e\"],\n            stops: [0, 100]\n          }\n        },\n        colors: [\"#8c7ae6\"],\n        tooltip: {\n          y: {\n            formatter: value => `$ ${value.toFixed(3)}`\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chart, \"bleqMRtH3XPEhT+q+Wl7SrTbIX4=\", false, function () {\n  return [useRecoilValue, useQuery];\n});\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["useQuery","fetchCoinHistory","ApexChart","useRecoilValue","isDarkAtom","Chart","coinId","isDark","isLoading","data","name","map","price","parseFloat","close","theme","mode","chart","height","width","toolbar","show","background","stroke","curve","grid","yaxis","xaxis","labels","datetimeFormatter","month","axisBorder","axisTicks","type","categories","time_close","fill","gradient","gradientToColors","stops","colors","tooltip","y","formatter","value","toFixed"],"sources":["/Users/baegseungmin/Desktop/test/typescript-my-app/src/routes/Chart.tsx"],"sourcesContent":["import { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\nimport { useRecoilValue } from \"recoil\";\nimport { isDarkAtom } from \"../atoms\";\n\ninterface IHistorical {\n  time_open: number;\n  time_close: number;\n  open: string;\n  high: string;\n  low: string;\n  close: string;\n  volume: string;\n  market_cap: number;\n}\ninterface IChartProps {\n  coinId: string;\n}\nfunction Chart({ coinId }: IChartProps) {\n  const isDark = useRecoilValue(isDarkAtom);\n  const { isLoading, data } = useQuery<IHistorical[]>([\"ohlcv\", coinId], () =>\n    fetchCoinHistory(coinId)\n  );\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading chart....\"\n      ) : (\n        <ApexChart\n          type=\"line\"\n          series={[\n            {\n              name: \"price\",\n              data: data?.map((price) => parseFloat(price.close)) as number[],\n            },\n          ]}\n          options={{\n            theme: { mode: isDark ? \"dark\" : \"light\" },\n            chart: {\n              height: 300,\n              width: 500,\n              toolbar: { show: false },\n              background: \"transparent\",\n            },\n            stroke: {\n              curve: \"smooth\",\n              width: 4,\n            },\n            grid: { show: false },\n            yaxis: { show: false },\n            xaxis: {\n              labels: {\n                show: false,\n                datetimeFormatter: { month: \"mmmm 'yy'\" },\n              },\n              axisBorder: { show: false },\n              axisTicks: { show: false },\n              type: \"datetime\",\n              categories: data?.map((price) => price.time_close),\n            },\n            fill: {\n              type: \"gradient\",\n              gradient: { gradientToColors: [\"#40739e\"], stops: [0, 100] },\n            },\n            colors: [\"#8c7ae6\"],\n            tooltip: { y: { formatter: (value) => `$ ${value.toFixed(3)}` } },\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Chart;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,aAAzB;AACA,SAASC,gBAAT,QAAiC,QAAjC;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,SAASC,cAAT,QAA+B,QAA/B;AACA,SAASC,UAAT,QAA2B,UAA3B;;;AAeA,SAASC,KAAT,OAAwC;EAAA;;EAAA,IAAzB;IAAEC;EAAF,CAAyB;EACtC,MAAMC,MAAM,GAAGJ,cAAc,CAACC,UAAD,CAA7B;EACA,MAAM;IAAEI,SAAF;IAAaC;EAAb,IAAsBT,QAAQ,CAAgB,CAAC,OAAD,EAAUM,MAAV,CAAhB,EAAmC,MACrEL,gBAAgB,CAACK,MAAD,CADkB,CAApC;EAGA,oBACE;IAAA,UACGE,SAAS,GACR,mBADQ,gBAGR,QAAC,SAAD;MACE,IAAI,EAAC,MADP;MAEE,MAAM,EAAE,CACN;QACEE,IAAI,EAAE,OADR;QAEED,IAAI,EAAEA,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEE,GAAN,CAAWC,KAAD,IAAWC,UAAU,CAACD,KAAK,CAACE,KAAP,CAA/B;MAFR,CADM,CAFV;MAQE,OAAO,EAAE;QACPC,KAAK,EAAE;UAAEC,IAAI,EAAET,MAAM,GAAG,MAAH,GAAY;QAA1B,CADA;QAEPU,KAAK,EAAE;UACLC,MAAM,EAAE,GADH;UAELC,KAAK,EAAE,GAFF;UAGLC,OAAO,EAAE;YAAEC,IAAI,EAAE;UAAR,CAHJ;UAILC,UAAU,EAAE;QAJP,CAFA;QAQPC,MAAM,EAAE;UACNC,KAAK,EAAE,QADD;UAENL,KAAK,EAAE;QAFD,CARD;QAYPM,IAAI,EAAE;UAAEJ,IAAI,EAAE;QAAR,CAZC;QAaPK,KAAK,EAAE;UAAEL,IAAI,EAAE;QAAR,CAbA;QAcPM,KAAK,EAAE;UACLC,MAAM,EAAE;YACNP,IAAI,EAAE,KADA;YAENQ,iBAAiB,EAAE;cAAEC,KAAK,EAAE;YAAT;UAFb,CADH;UAKLC,UAAU,EAAE;YAAEV,IAAI,EAAE;UAAR,CALP;UAMLW,SAAS,EAAE;YAAEX,IAAI,EAAE;UAAR,CANN;UAOLY,IAAI,EAAE,UAPD;UAQLC,UAAU,EAAEzB,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEE,GAAN,CAAWC,KAAD,IAAWA,KAAK,CAACuB,UAA3B;QARP,CAdA;QAwBPC,IAAI,EAAE;UACJH,IAAI,EAAE,UADF;UAEJI,QAAQ,EAAE;YAAEC,gBAAgB,EAAE,CAAC,SAAD,CAApB;YAAiCC,KAAK,EAAE,CAAC,CAAD,EAAI,GAAJ;UAAxC;QAFN,CAxBC;QA4BPC,MAAM,EAAE,CAAC,SAAD,CA5BD;QA6BPC,OAAO,EAAE;UAAEC,CAAC,EAAE;YAAEC,SAAS,EAAGC,KAAD,IAAY,KAAIA,KAAK,CAACC,OAAN,CAAc,CAAd,CAAiB;UAA9C;QAAL;MA7BF;IARX;MAAA;MAAA;MAAA;IAAA;EAJJ;IAAA;IAAA;IAAA;EAAA,QADF;AAgDD;;GArDQxC,K;UACQF,c,EACaH,Q;;;KAFrBK,K;AAuDT,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}